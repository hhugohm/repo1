/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.neos.broker.gui;

import java.awt.Dimension;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTree;
import javax.swing.UIManager;
import org.neos.broker.beans.RequestBroker;
import org.neos.broker.beans.ResponseBroker;
import org.neos.broker.business.IBusinessConexion;
import org.neos.broker.constants.ConstantsBroker;
import org.neos.broker.gui.conection.NewDialogConn;
import org.neos.broker.gui.tabs.MQTabbedMessage;
import org.neos.broker.gui.tree.IconNodeRenderer;
import org.neos.broker.gui.tree.NodeGui;
import org.neos.broker.gui.tree.TreeMouseAdapter;
import org.neos.broker.sqljet.utils.SqljetUtils;
import static org.neos.broker.utils.SpringContextManager.getInstance;
import org.tmatesoft.sqljet.core.SqlJetException;

/**
 *NeosSoftware Corporation 2012
 * 
 * @author neossoftware
 */
public class MQApplicationJdesk extends javax.swing.JFrame {

      private NewDialogConn newConnectionUI;
      
      private MQTabbedMessage tabMessages;

   

   
    /**
     * Creates new form MQApplicationJdesk
     */
    public MQApplicationJdesk() {
        
       createDatabase();
        
        newConnectionUI = new NewDialogConn(this,true);
        
        tabMessages = new MQTabbedMessage();        
        initComponents();
        
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
       
        //Set up the GUI.
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtreeConnections = new javax.swing.JTree();
        jPanel4 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        ok = new javax.swing.JButton();
        jpanelRight = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MQ GUI");

        splitPane.setToolTipText("");

        jPanel1.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setViewportView(jtreeConnections);
        populateValues(jtreeConnections);

        jPanel1.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        splitPane.setLeftComponent(jPanel1);

        jPanel4.setLayout(new java.awt.BorderLayout());
        splitPane.setRightComponent(jPanel4);

        getContentPane().add(splitPane, java.awt.BorderLayout.LINE_START);
        Dimension minimumSize = new Dimension(0, 0);
        jPanel1.setMinimumSize(minimumSize);
        jPanel4.setMinimumSize(minimumSize);
        jpanelRight.setMinimumSize(minimumSize);

        jToolBar1.setRollover(true);

        ok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/newconn.gif"))); // NOI18N
        ok.setFocusable(false);
        ok.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ok.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(ok);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jpanelRight.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jpanelRight, java.awt.BorderLayout.CENTER);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentMenuItem.setMnemonic('c');
        contentMenuItem.setText("Contents");
        helpMenu.add(contentMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

   /* public JSplitPane getSplitMessages() {
        return splitMessages;
    }

    public void setSplitMessages(JSplitPane splitMessages) {
        this.splitMessages = splitMessages;
    }

    public JPanel getJpanelMessages() {
        return jpanelMessages;
    }

    public void setJpanelMessages(JPanel jpanelMessages) {
        this.jpanelMessages = jpanelMessages;
    }*/

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])  {
        
         //Make sure we have nice window decorations.
        //JFrame.setDefaultLookAndFeelDecorated(true);
        //JDialog.setDefaultLookAndFeelDecorated(true);
        /* Set the Nimbus look and feel */
     try {
       String   lookAndFeel = UIManager.getSystemLookAndFeelClassName();
           UIManager.setLookAndFeel(lookAndFeel);
     }catch(Exception e) {
     e.printStackTrace();
     }
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MQApplicationJdesk().setVisible(true);
            }
        });
    }
    
    public void populateValues(JTree arbol) {
        buildTreeConexion(arbol);
    }
    
    protected  void buildTreeConexion(JTree arbol){
        
         businessConexion = (IBusinessConexion)  
                        getInstance().getContext().
                                    getBean(ConstantsBroker.BUSINESS_CONEXION);
         
        RequestBroker request = new RequestBroker();
        ResponseBroker response;
        
        putArbolRequest(request,arbol);
        response=businessConexion.getAllConexionBusiness(request);
        
        showTreeConexion(response,arbol); 

    }
    
    protected void showTreeConexion(ResponseBroker response,JTree arbol){
       arbol= response.getArbol();
       raiz=response.getRaiz();
       
       arbol.setCellRenderer(new IconNodeRenderer());
       arbol.expandRow(0);
       arbol.addMouseListener(new TreeMouseAdapter(raiz,this));
    }
    protected void putArbolRequest(RequestBroker request,JTree arbol){
        request.setArbol(arbol);
        
    }
    private IBusinessConexion businessConexion;
    private NodeGui raiz;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel jpanelRight;
    private javax.swing.JTree jtreeConnections;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton ok;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JSplitPane splitPane;
    // End of variables declaration//GEN-END:variables

    public JPanel getJpanelRight() {
        return jpanelRight;
    }

    public void setJpanelRight(JPanel jpanelRight) {
        this.jpanelRight = jpanelRight;
    }

    public void setJtreeConnections(JTree jtreeConnections) {
        this.jtreeConnections = jtreeConnections;
    }

    public JTree getJtreeConnections() {
        return jtreeConnections;
    }
    
     public NewDialogConn getNewConnectionUI() {
        return newConnectionUI;
    }

    public void setNewConnectionUI(NewDialogConn newConnectionUI) {
        this.newConnectionUI = newConnectionUI;
    }
    
     public MQTabbedMessage getTabMessages() {
        return tabMessages;
    }

    public void setTabMessages(MQTabbedMessage tabMessages) {
        this.tabMessages = tabMessages;
    }

    public void setBusinessConexion(IBusinessConexion businessConexion) {
        this.businessConexion = businessConexion;
    }

    private void createDatabase() {
      try {
			SqljetUtils.createDataBase();
		} catch (SqlJetException e) {
		
			e.printStackTrace();
		}
    }
    

}
